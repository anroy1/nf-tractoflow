/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf/tractoflow Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    //*BIDS options**//
    clean_input_bids                                = false

    //**Surgeryflow parameters**//
    run_synthbet                                    = true
    run_synthseg                                    = true
    run_synthmorph                                  = true

    //**Freesurfer license**//
    fs_license                                      = "license.txt"

    //**BundleSeg atlas*//
    atlas_directory                                 = "rbx_atlases/"

    //**Global options**//
    dwi_b0_extract_threshold                        = 10
    dwi_shell_extract_tolerance                     = 20

    //**SH fitting**//
    dwi_fit_signal_sh                               = false              //FIXME
    dwi_signal_sh_fit_order                         = 6                 //FIXME
    dwi_signal_sh_fit_basis                         = "descoteaux07"    //FIXME
    dwi_signal_sh_fit_shell                         = null              //FIXME

    //**Preliminary DWI brain extraction**//
    dwi_mask_prelim_bet_dilation_radius             = 5
    dwi_mask_prelim_bet_f_threshold                 = 0.16

    //**Denoise dwi (dwidenoise in Mrtrix3)**//
    dwi_filter_noise                                = true  //FIXME
    dwi_noise_filter_patch_size                     = 7

    //**GIBBS CORRECTION (mrdegibbs in Mrtrix3)**//
    dwi_filter_gibbs                                = false //FIXME

    //**Topup**//
    dwi_filter_susceptibility                       = true  //FIXME
    dwi_susceptibility_filter_config_file           = "b02b0.cnf"
    dwi_susceptibility_filter_output_prefix         = "topup_results"

    //**Eddy**//
    dwi_filter_eddy_and_motion                      = false  //FIXME
    dwi_motion_and_eddy_filter_command              = "eddy_cpu"
    dwi_motion_and_eddy_filter_bet_f_threshold      = 0.16
    dwi_motion_and_eddy_filter_restore_slices       = true

    //**N4 bias correction**//
    dwi_bias_correction_bspline_knots_per_voxel     = 0.25
    dwi_bias_correction_shrink_factor               = 4

    //**Final DWI BET**//
    dwi_mask_final_bet_f_threshold                  = 0.16

    //**Denoise T1**//
    t1_filter_noise                                 = true  //FIXME
    run_t1_denoising                                = true

    //* T1 BET**//
    t1_bet_template_t1                              = "/human-data/mni_152_sym_09c/t1/t1_template.nii.gz"
    t1_bet_template_probability_map                 = "/human-data/mni_152_sym_09c/t1/t1_brain_probability_map.nii.gz"
    t1_bet_no_csf                                   = true

    //**Resample T1**//
    t1_resample_spatial                             = true  //FIXME
    t1_spatial_resample_resolution                  = 1
    t1_spatial_resample_interpolation               = "lin"

    //**Register T1**//
    t1_register_field                               = true
    t1_register_synthmorph_regularization           = 0.5

    //**Normalize DWI**//
    dwi_intensities_normalize_fa_mask_threshold     = 0.4   //FIXME

    //**Resample DWI**//
    dwi_resample_spatial                            = true  //FIXME
    dwi_spatial_resample_resolution                 = 1
    dwi_spatial_resample_interpolation              = "lin"

    //**Extract DTI shells using this value as maximum**//
    dwi_dti_fit_shell_max_bvalue                    = 1200  //FIXME
    dwi_dti_fit_shells                              = null  //FIXME

    //**Extract fODF shells using this value as minimum**//
    dwi_fodf_fit_shell_min_bvalue                   = 700
    dwi_fodf_fit_shells                             = null //FIXME

    //**Segment tissues**//
    t1_tissue_segment_n_classes                     = 3    //FIXME
    t1_tissue_segment_synth_fast                    = true

    //**Compute fiber response function (frf)**//
    dwi_fodf_fit_frf_max_fa_threshold               = 0.7
    dwi_fodf_fit_frf_min_fa_threshold               = 0.5
    dwi_fodf_fit_frf_min_n_voxels                   = 300
    dwi_fodf_fit_frf_roi_radius                     = 20
    dwi_fodf_fit_force_frf                          = null

    //**Mean fiber response function (frf)**//
    dwi_fodf_fit_use_average_frf                    = false     //FIXME

    //**Compute fODF metrics**//
    dwi_fodf_fit_order                              = 8
    dwi_fodf_fit_basis                              = "descoteaux07"
    dwi_fodf_fit_peaks_absolute_factor              = 2.0
    dwi_fodf_fit_peaks_relative_threshold           = 0.1
    dwi_fodf_fit_peaks_ventricle_max_fa             = 0.1
    dwi_fodf_fit_peaks_ventricle_min_md             = 0.003

    //**PFT tracking**//
    run_pft_tracking                                = false
    fodf_pft_fit_random_seed                        = 0
    fodf_pft_fit_algorithm                          = "prob"
    fodf_pft_fit_step_size                          = 0.5
    fodf_pft_fit_theta_max_deviation                = 20
    fodf_pft_fit_streamline_min_length              = 20
    fodf_pft_fit_streamline_max_length              = 200
    fodf_pft_fit_seeding_type                       = "wm"
    fodf_pft_fit_seeding_strategy                   = "npv"
    fodf_pft_fit_seeding_n_seeds                    = 10
    fodf_pft_fit_seeding_fa_mask_threshold          = 0.1
    fodf_pft_fit_filter_n_particles                 = 15
    fodf_pft_fit_filter_backward_step_size          = 2
    fodf_pft_fit_filter_forward_step_size           = 1
    fodf_pft_fit_sf_threshold                       = 0.1
    fodf_pft_fit_sf_initial_threshold               = 0.5
    fodf_pft_fit_compress_tractogram                = true
    fodf_pft_fit_compress_max_displacement          = 0.2

    //**Local tracking**//
    run_local_tracking                              = true
    fodf_local_fit_processor                        = "cpu"     //FIXME
    fodf_local_fit_gpu_batch_size                   = 10000     //FIXME
    fodf_local_fit_random_seed                      = 0
    fodf_local_fit_algorithm                        = "prob"
    fodf_local_fit_step_size                        = 0.5
    fodf_local_fit_theta_max_deviation              = 20
    fodf_local_fit_streamline_min_length            = 20
    fodf_local_fit_streamline_max_length            = 200
    fodf_local_fit_seeding_type                     = "fa"
    fodf_local_fit_seeding_strategy                 = "npv"
    fodf_local_fit_seeding_n_seeds                  = 5
    fodf_local_fit_seeding_fa_threshold             = 0.1
    fodf_local_fit_tracking_mask_type               = "fa"
    fodf_local_fit_tracking_mask_fa_threshold       = 0.1
    fodf_local_fit_sf_threshold                     = 0.1
    fodf_local_fit_sf_initial_threshold             = 0.5       //FIXME
    fodf_local_fit_compress_tractogram              = true
    fodf_local_fit_compress_max_displacement        = 0.2

    //**Bundle segmentation**//
    bundle_rbx_seed                                 = 0
    bundle_rbx_outlier_alpha                        = 0.5
    bundle_rbx_minimal_vote_ratio                   = 0.1

    //**Processes Maximum CPU allocation**//
    allocation_cpu_max_bet                          = 4 //FIXME
    allocation_cpu_max_dwi_filter_noise             = 4 //FIXME
    allocation_cpu_max_dwi_filter_motion_and_eddy   = 4 //FIXME
    allocation_cpu_max_dwi_fit_fodf                 = 4 //FIXME
    allocation_cpu_max_fodf_fit_local               = 4 //FIXME
    allocation_cpu_max_t1_filter_noise              = 4 //FIXME
    allocation_cpu_max_t1_registration              = 4 //FIXME
    allocation_cpu_map_bundle_register              = 4 //FIXME
    allocation_cpu_map_bundle_rbx                   = 4 //FIXME

    // Input options
    input                      = null// MultiQC options
    bids                       = null
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                     = null
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false
    //TODO: RBX head params?
    root                       = false


    // Config options
    config_profile_name        = null
    config_profile_description = null
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '24.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

    // Schema validation default options
    validationFailUnrecognisedParams = false
    validationLenientMode            = false
    validationSchemaIgnoreParams     = 'genomes,igenomes_base'
    validationShowHiddenParams       = false
    validate_params                  = true

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf/tractoflow custom profiles from different institutions.
// Warning: Uncomment only if a pipeline-specific institutional config already exists on nf-core/configs!
// try {
//   includeConfig "${params.custom_config_base}/pipeline/tractoflow.config"
// } catch (Exception e) {
//   System.err.println("WARNING: Could not load nf-core/config/tractoflow profiles: ${params.custom_config_base}/pipeline/tractoflow.config")
// }
profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
        nextflow.enable.configProcessNamesValidation = true
    }
    docker {
        docker.enabled         = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
        docker.runOptions      = '-u $(id -u):$(id -g)'
        docker.runOptions      = "--user root"
    }
    arm {
        docker.runOptions      = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled         = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    shifter {
        shifter.enabled        = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    charliecloud {
        charliecloud.enabled   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        apptainer.enabled      = false
    }
    apptainer {
        apptainer.enabled      = true
        apptainer.autoMounts   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 4
        executor.memory        = 8.GB
    }
    fully_reproductible {
        params.allocation_cpu_map_bundle_register = 4
        params.allocation_cpu_map_bundle_rbx = 4
    }
    use_gpu {
        singularity.runOptions='--nv'
        docker.runOptions='--gpus all'
        params.enable_gpu=true
        params.eddy_cmd="eddy_cuda10.2"
    }
    bundling {
        //** Local tracking **//
        fodf_fit_local                              = true
        fodf_local_fit_seeding_n_seeds              = 5
        fodf_local_fit_seeding_type                 = "fa"
        fodf_local_fit_seeding_fa_threshold         = 0.15
        fodf_local_fit_tracking_mask_type           = "fa"
        fodf_local_fit_tracking_mask_fa_threshold   = 0.15

        //** PFT tracking **//
        fodf_pft_fit_seeding_n_seeds                = 10
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'docker.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

// Nextflow plugins
plugins {
    id 'nf-validation@1.1.3' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf/surgeryflow'
    author          = """@AlexVCaron"""
    homePage        = 'https://github.com/nf/surgeryflow'
    description     = """Human diffusion MRI processing and tractography for neurosurgery"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '1.0dev'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
