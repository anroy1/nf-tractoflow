{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/AlexVCaron/nf-tractoflow/master/nextflow_schema.json",
    "title": "nf-tractoflow pipeline parameters",
    "description": "Human diffusion MRI processing and tractography",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "help_text": "Sepcify input samplesheet and output directory",
            "anyOf": [
                {
                    "required": ["input", "outdir"]
                },
                {
                    "required": ["bids", "outdir"]
                }
            ],
            "properties": {
                "input": {
                    "mimetype": "text/csv",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "List of subjects to process. See `assets/samplesheet_raw.csv`.",
                    "fa_icon": "fas fa-file-csv",
                    "exists": true,
                    "type": "string",
                    "format": "file-path",
                    "schema": "assets/schema_raw_input.json"
                },
                "bids": {
                    "mimetype": "text/csv",
                    "description": "Path to comma-separated file containing information about the bids databases used in the experiment.",
                    "help_text": "List of BIDS databases to load. See `assets/samplesheet_bids.csv`.",
                    "fa_icon": "fas fa-file-csv",
                    "exists": true,
                    "type": "string",
                    "format": "file-path",
                    "schema": "assets/schema_bids_input.json"
                },
                "dwi_shell_extract_tolerance": {
                    "type": "integer",
                    "default": 20,
                    "description": "Consider all b-values up to +-tolerance as belonging to the same shell.",
                    "minimum": 0
                },
                "dwi_b0_extract_threshold": {
                    "type": "integer",
                    "default": 10,
                    "description": "Consider all b-values below threshold as b=0 images.",
                    "minimum": 0,
                    "maximum": 100
                },
                "clean_input_bids": {
                    "type": "boolean",
                    "description": "Remove all participants that are missing any information when reading input BIDS databases."
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "dwi_preprocessing_options": {
            "title": "DWI preprocessing options",
            "type": "object",
            "description": "All parameters related to DWI preprocessing.",
            "properties": {
                "dwi_mask_prelim_bet_dilation_radius": {
                    "type": "integer",
                    "default": 5,
                    "description": "Dilation radius applied to the preliminary mask to ensure whole brain coverage.",
                    "minimum": 1
                },
                "dwi_mask_prelim_bet_f_threshold": {
                    "type": "number",
                    "default": 0.16,
                    "description": "Fractional Intensity threshold for preliminary brain masking.",
                    "minimum": -1,
                    "maximum": 1
                },
                "dwi_filter_noise": {
                    "type": "boolean",
                    "default": true,
                    "description": "Run background noise filtering on the DWI (Mrtrix3 dwidenoise)."
                },
                "dwi_noise_filter_patch_size": {
                    "type": "integer",
                    "default": 7,
                    "description": "Size of the noise filtering kernel. Should at least as large as the cubic root of the number of independent directions in the dwi image.",
                    "minimum": 2
                },
                "dwi_filter_gibbs": {
                    "type": "boolean",
                    "description": "Run Gibbs Ringing artifact filtering on the DWI (Mrtrix3 mrdegibbs)."
                },
                "dwi_filter_susceptibility": {
                    "type": "boolean",
                    "default": true,
                    "description": "Run Susceptibility Distortions Filtering on the DWI (FSL Topup)."
                },
                "dwi_susceptibility_filter_config_file": {
                    "type": "string",
                    "default": "b02b0.cnf",
                    "description": "Configuration file to use for Topup. Can either be a full path to a file or the name of a configuration file in Topup resources."
                },
                "dwi_susceptibility_filter_output_prefix": {
                    "type": "string",
                    "default": "topup_results",
                    "description": "Output prefix to use for susceptibility filtering output filenames."
                },
                "dwi_filter_eddy_and_motion": {
                    "type": "boolean",
                    "default": true,
                    "description": "Filter eddy current and attenuate patient motion on the DWI (FSL Eddy)."
                },
                "dwi_motion_and_eddy_filter_command": {
                    "type": "string",
                    "default": "eddy_cpu",
                    "description": "Command to use to run Eddy.",
                    "enum": [
                        "eddy_cpu",
                        "eddy_cuda10.2"
                    ]
                },
                "dwi_motion_and_eddy_filter_bet_f_threshold": {
                    "type": "number",
                    "default": 0.16,
                    "description": "Fractional Intensity threshold for intermediate brain masking before Motion and Eddy filtering.",
                    "minimum": -1,
                    "maximum": 1
                },
                "dwi_motion_and_eddy_filter_restore_slices": {
                    "type": "boolean",
                    "default": true,
                    "description": "Regenerate slices lost due to signal drop."
                },
                "dwi_mask_final_bet_f_threshold": {
                    "type": "number",
                    "default": 0.16,
                    "description": "Fractional Intensity threshold for final brain masking.",
                    "minimum": -1,
                    "maximum": 1
                },
                "dwi_bias_correction_bspline_knots_per_voxel": {
                    "type": "number",
                    "default": 0.25,
                    "description": "Number of B-Spline knots per voxel for bias correction.",
                    "minimum": 0
                },
                "dwi_bias_correction_shrink_factor": {
                    "type": "integer",
                    "default": 4,
                    "description": "Shrink factor for bias correction.",
                    "minimum": 1
                },
                "dwi_intensities_normalize_fa_mask_threshold": {
                    "type": "number",
                    "default": 0.4,
                    "description": "Maximum FA value for a voxel to be considered for intensity normalisation.",
                    "minimum": 0,
                    "maximum": 1
                }
            }
        },
        "t1_preprocessing_options": {
            "title": "T1 preprocessing options",
            "type": "object",
            "description": "All parameters related to T1 preprocessing.",
            "properties": {
                "t1_filter_noise": {
                    "type": "boolean",
                    "default": true,
                    "description": "Run background noise filtering on the T1 (Dipy NL-Means)"
                },
                "t1_tissue_segment_n_classes": {
                    "type": "integer",
                    "default": 3,
                    "description": "Number of tissue classes to estimate on the T1.",
                    "minimum": 1
                },
                "t1_bet_template_t1": {
                    "type": "string",
                    "default": "/human-data/mni_152_sym_09c/t1/t1_template.nii.gz",
                    "description": "Path to the template T1 for antsBrainExtraction.",
                    "format": "file-path",
                    "exists": false
                },
                "t1_bet_template_probability_map": {
                    "type": "string",
                    "default": "/human-data/mni_152_sym_09c/t1/t1_brain_probability_map.nii.gz",
                    "description": "Path to the template brain probability map for antsBrainExtraction.",
                    "format": "file-path",
                    "exists": false
                }
            }
        },
        "resampling_options": {
            "title": "Resampling options",
            "type": "object",
            "description": "Resampling options for DWI and anatomical volumes.",
            "properties": {
                "dwi_resample_spatial": {
                    "type": "boolean",
                    "default": true,
                    "description": "Resample DWI volumes to a finer isotropic spatial resolution before processing."
                },
                "dwi_spatial_resample_resolution": {
                    "type": "number",
                    "default": 1,
                    "description": "Isotropic spatial resolution for DWI resampling.",
                    "minimum": 0
                },
                "dwi_spatial_resample_interpolation": {
                    "type": "string",
                    "default": "lin",
                    "description": "Interpolation method to use for DWI resampling.",
                    "enum": [
                        "nn",
                        "lin",
                        "quad",
                        "cubic"
                    ]
                },
                "t1_resample_spatial": {
                    "type": "boolean",
                    "default": true,
                    "description": "Resample T1 volumes to a finer isotropic spatial resolution before processing."
                },
                "t1_spatial_resample_resolution": {
                    "type": "number",
                    "default": 1,
                    "description": "Isotropic spatial resolution for T1 resampling.",
                    "minimum": 0
                },
                "t1_spatial_resample_interpolation": {
                    "type": "string",
                    "default": "lin",
                    "description": "Interpolation method to use for T1 resampling.",
                    "enum": [
                        "nn",
                        "lin",
                        "quad",
                        "cubic"
                    ]
                }
            }
        },
        "dwi_processing_options": {
            "title": "DWI processing options",
            "type": "object",
            "description": "All parameters related to DWI processing (SH, DTI, fODF).",
            "properties": {
                "dwi_fit_signal_sh": {
                    "type": "boolean",
                    "default": true,
                    "description": "Compute a Spherical Harmonics fit on the DWI, and output the SH coefficients in a Nifti file."
                },
                "dwi_signal_sh_fit_basis": {
                    "type": "string",
                    "default": "descoteaux07",
                    "description": "Spherical harmonics basis used for the signal fit.",
                    "enum": [
                        "descoteaux07",
                        "tournier07"
                    ]
                },
                "dwi_signal_sh_fit_order": {
                    "type": "integer",
                    "default": 6,
                    "description": "Spherical harmonics order for the signal fit. Must be an even number.",
                    "minimum": 2
                },
                "dwi_signal_sh_fit_shell": {
                    "type": "integer",
                    "description": "Shell to select for the signal fit. The b0 images will be extracted and concatenated to it for fitting."
                },
                "dwi_dti_fit_shell_max_bvalue": {
                    "type": "integer",
                    "default": 1200,
                    "description": "Maximum b-value considered for the DTI fit.",
                    "minimum": 0
                },
                "dwi_dti_fit_shells": {
                    "type": "string",
                    "description": "Shells to use for the DTI fit. List them through command line using a whitespace separated list of b-values. Overseeds other arguments setting shells."
                },
                "dwi_fodf_fit_shell_min_bvalue": {
                    "type": "integer",
                    "default": 700,
                    "description": "Minimum b-value considered for fODF fit (b0 shell will be preserved).",
                    "minimum": 0
                },
                "dwi_fodf_fit_shells": {
                    "type": "string",
                    "description": "Shells to use for the fODF fit. List them through command line using a whitespace separated list of b-values. Overseeds other arguments setting shells."
                },
                "dwi_fodf_fit_frf_max_fa_threshold": {
                    "type": "number",
                    "default": 0.7,
                    "description": "Maximum FA threshold to compute the fiber response function. Value decreases over time until the minimum threshold is reached.",
                    "minimum": 0,
                    "maximum": 1
                },
                "dwi_fodf_fit_frf_min_fa_threshold": {
                    "type": "number",
                    "default": 0.5,
                    "description": "Minimum FA threshold to compute the fiber response function. An error is raised if not enough voxels are found after reaching this threshold.",
                    "minimum": 0,
                    "maximum": 1
                },
                "dwi_fodf_fit_frf_min_n_voxels": {
                    "type": "integer",
                    "default": 300,
                    "description": "Minimum acceptable number of voxels to compute a fiber response function. An error is raised if not enough voxels are found.",
                    "minimum": 1
                },
                "dwi_fodf_fit_frf_roi_radius": {
                    "type": "integer",
                    "default": 20,
                    "description": "Isotropic radius of the Region Of Interest to use to compute the fiber response function."
                },
                "dwi_fodf_fit_force_frf": {
                    "type": "string",
                    "description": "Force a fiber response function. Supply as 3 values (mean b0, parallel diffusivity, perpendicular diffusivity). List it through command line using a whitespace separated list."
                },
                "dwi_fodf_fit_use_average_frf": {
                    "type": "boolean",
                    "description": "Average the fiber response function over inputs. USE ONLY IF ALL OF SUBJECTS COME FROM THE SAME SCANNER AND ADHERE TO THE SAME ACQUISITION PROTOCOL."
                },
                "dwi_fodf_fit_order": {
                    "type": "integer",
                    "default": 8,
                    "description": "Spherical harmonics order for the fODF fit. Must be an even number.",
                    "minimum": 2
                },
                "dwi_fodf_fit_basis": {
                    "type": "string",
                    "default": "descoteaux07",
                    "description": "Spherical harmonics basis used for the signal fit.",
                    "enum": [
                        "descoteaux07",
                        "tournier07"
                    ]
                },
                "dwi_fodf_fit_peaks_absolute_factor": {
                    "type": "number",
                    "default": 2,
                    "description": "Multiplicative factor to threshold fODF peaks by amplitude, compared to values obtained in ventricles.",
                    "minimum": 0
                },
                "dwi_fodf_fit_peaks_relative_threshold": {
                    "type": "number",
                    "default": 0.1,
                    "description": "Relative fODF peak amplitude threshold, a a ratio of the largest local peak.",
                    "minimum": 0,
                    "maximum": 1
                },
                "dwi_fodf_fit_peaks_ventricle_max_fa": {
                    "type": "number",
                    "default": 0.1,
                    "description": "Maximum FA threshold for a voxel to be considered inside ventricules.",
                    "minimum": 0,
                    "maximum": 1
                },
                "dwi_fodf_fit_peaks_ventricle_min_md": {
                    "type": "number",
                    "default": 0.003,
                    "description": "Minimum MD threshold for a voxel to be considered inside ventricules.",
                    "minimum": 0
                }
            }
        },
        "particle_filtering_tractography_options": {
            "title": "Particle Filtering Tractography options",
            "type": "object",
            "description": "All parameters related to particle filtering tractography on fODF fields.",
            "properties": {
                "fodf_fit_pft": {
                    "type": "boolean",
                    "default": true,
                    "description": "Run Particle Filtering Tractography (PFT)."
                },
                "fodf_pft_fit_random_seed": {
                    "type": "integer",
                    "default": 0,
                    "description": "List of seed numbers for the random number generator. List them through command line using a whitespace separated list of seeds.",
                    "minimum": 0
                },
                "fodf_pft_fit_algorithm": {
                    "type": "string",
                    "default": "prob",
                    "description": "Tractography algorithm type.",
                    "enum": [
                        "prob",
                        "det"
                    ]
                },
                "fodf_pft_fit_step_size": {
                    "type": "number",
                    "default": 0.5,
                    "description": "Length between steps in mm.",
                    "minimum": 0
                },
                "fodf_pft_fit_theta_max_deviation": {
                    "type": "number",
                    "default": 20,
                    "description": "Maximum angular deviation between steps in degrees.",
                    "minimum": 0,
                    "maximum": 360
                },
                "fodf_pft_fit_streamline_min_length": {
                    "type": "number",
                    "default": 20,
                    "description": "Minimum streamline length in mm.",
                    "minimum": 0
                },
                "fodf_pft_fit_streamline_max_length": {
                    "type": "number",
                    "default": 200,
                    "description": "Maximum streamline length in mm.",
                    "minimum": 0
                },
                "fodf_pft_fit_seeding_type": {
                    "type": "string",
                    "default": "wm",
                    "description": "Type of seeding mask to compute.",
                    "enum": [
                        "wm",
                        "interface",
                        "fa"
                    ]
                },
                "fodf_pft_fit_seeding_strategy": {
                    "type": "string",
                    "default": "npv",
                    "description": "Number of seeds initiated per voxel (npv) or globally (nt).",
                    "enum": [
                        "npv",
                        "nt"
                    ]
                },
                "fodf_pft_fit_seeding_n_seeds": {
                    "type": "integer",
                    "default": 10,
                    "description": "Number of seeds to use, given the seeding strategy.",
                    "minimum": 1
                },
                "fodf_pft_fit_seeding_fa_mask_threshold": {
                    "type": "number",
                    "default": 0.1,
                    "description": "Minimum FA threshold when seeding in FA.",
                    "minimum": 0,
                    "maximum": 1
                },
                "fodf_pft_fit_filter_n_particles": {
                    "type": "integer",
                    "default": 15,
                    "description": "Number of particles propagated in case of premature termination.",
                    "minimum": 1
                },
                "fodf_pft_fit_filter_backward_step_size": {
                    "type": "number",
                    "default": 2,
                    "description": "Length of the backtracking steps of the particle filter in mm.",
                    "minimum": 0
                },
                "fodf_pft_fit_filter_forward_step_size": {
                    "type": "number",
                    "default": 1,
                    "description": "Length of the forward tracking steps of the particle filter in mm.",
                    "minimum": 0
                },
                "fodf_pft_fit_sf_threshold": {
                    "type": "number",
                    "default": 0.1,
                    "description": "Threshold on spherical functions computed from fODF.",
                    "minimum": 0
                },
                "fodf_pft_fit_sf_initial_threshold": {
                    "type": "number",
                    "default": 0.5,
                    "description": "Initial threshold on spherical functions computed from fODF.",
                    "minimum": 0
                },
                "fodf_pft_fit_compress_tractogram": {
                    "type": "boolean",
                    "default": true,
                    "description": "Compress streamlines to save space."
                },
                "fodf_pft_fit_compress_max_displacement": {
                    "type": "number",
                    "default": 0.2,
                    "description": "Maximum point displacement allowed when compressing.",
                    "minimum": 0
                }
            }
        },
        "local_tractography_options": {
            "title": "Local Tractography options",
            "type": "object",
            "description": "All parameters related to local tractography on fODF fields.",
            "properties": {
                "fodf_fit_local": {
                    "type": "boolean",
                    "default": true,
                    "description": "Run local tractography."
                },
                "fodf_local_fit_processor": {
                    "type": "string",
                    "default": "cpu",
                    "description": "Type of processor to use, either CPU or GPU (using OpenCL).",
                    "enum": [
                        "cpu",
                        "gpu"
                    ]
                },
                "fodf_local_fit_gpu_batch_size": {
                    "type": "integer",
                    "default": 10000,
                    "description": "Approximate size of GPU batches (number of streamlines to track in parallel).",
                    "minimum": 1
                },
                "fodf_local_fit_random_seed": {
                    "type": "integer",
                    "default": 0,
                    "description": "List of seed numbers for the random number generator. List them through command line using a whitespace separated list of seeds.",
                    "minimum": 0
                },
                "fodf_local_fit_algorithm": {
                    "type": "string",
                    "default": "prob",
                    "description": "Tractography algorithm type.",
                    "enum": [
                        "prob",
                        "det"
                    ]
                },
                "fodf_local_fit_step_size": {
                    "type": "number",
                    "default": 0.5,
                    "description": "Length between tracking steps in mm.",
                    "minimum": 0
                },
                "fodf_local_fit_theta_max_deviation": {
                    "type": "number",
                    "default": 20,
                    "description": "Maximum angular deviation between steps in degrees.",
                    "minimum": 0,
                    "maximum": 360
                },
                "fodf_local_fit_streamline_min_length": {
                    "type": "number",
                    "default": 20,
                    "description": "Minimum streamline length in mm.",
                    "minimum": 0
                },
                "fodf_local_fit_streamline_max_length": {
                    "type": "number",
                    "default": 200,
                    "description": "Maximum streamline length in mm.",
                    "minimum": 0
                },
                "fodf_local_fit_seeding_type": {
                    "type": "string",
                    "default": "wm",
                    "description": "Type of seeding mask to compute.",
                    "enum": [
                        "wm",
                        "fa",
                        "interface"
                    ]
                },
                "fodf_local_fit_seeding_strategy": {
                    "type": "string",
                    "default": "npv",
                    "description": "Number of seeds initiated per voxel (npv) or globally (nt).",
                    "enum": [
                        "npv",
                        "nt"
                    ]
                },
                "fodf_local_fit_seeding_n_seeds": {
                    "type": "integer",
                    "default": 10,
                    "description": "Number of seeds to use, given the seeding strategy.",
                    "minimum": 1
                },
                "fodf_local_fit_seeding_fa_threshold": {
                    "type": "number",
                    "default": 0.1,
                    "description": "Minimum FA threshold when seeding in FA.",
                    "minimum": 0,
                    "maximum": 1
                },
                "fodf_local_fit_tracking_mask_type": {
                    "type": "string",
                    "description": "Type of tracking mask to compute.",
                    "default": "wm",
                    "enum": [
                        "wm",
                        "fa"
                    ]
                },
                "fodf_local_fit_tracking_mask_fa_threshold": {
                    "type": "number",
                    "description": "Minimum FA threshold when tracking in FA.",
                    "default": 0.1,
                    "minimum": 0,
                    "maximum": 1
                },
                "fodf_local_fit_sf_threshold": {
                    "type": "number",
                    "default": 0.1,
                    "description": "Threshold on spherical functions computed from fODF.",
                    "minimum": 0
                },
                "fodf_local_fit_sf_initial_threshold": {
                    "type": "number",
                    "default": 0.5,
                    "description": "Initial threshold on spherical functions computed from fODF.",
                    "minimum": 0
                },
                "fodf_local_fit_compress_tractogram": {
                    "type": "boolean",
                    "default": true,
                    "description": "Compress streamlines to save space."
                },
                "fodf_local_fit_compress_max_displacement": {
                    "type": "number",
                    "default": 0.2,
                    "description": "Maximum point displacement allowed when compressing.",
                    "minimum": 0
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`.",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true,
                    "help_text": "By default, when an unrecognised parameter is found, it returns a warinig."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters in lenient more.",
                    "hidden": true,
                    "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/dwi_preprocessing_options"
        },
        {
            "$ref": "#/definitions/t1_preprocessing_options"
        },
        {
            "$ref": "#/definitions/resampling_options"
        },
        {
            "$ref": "#/definitions/dwi_processing_options"
        },
        {
            "$ref": "#/definitions/particle_filtering_tractography_options"
        },
        {
            "$ref": "#/definitions/local_tractography_options"
        }
    ],
    "properties": {
        "allocation_cpu_max_bet": {
            "type": "integer",
            "default": 4,
            "description": "Number of processes for T1 brain extraction."
        },
        "allocation_cpu_max_dwi_filter_noise": {
            "type": "integer",
            "default": 4,
            "description": "Number of processes for DWI denoising."
        },
        "allocation_cpu_max_dwi_filter_motion_and_eddy": {
            "type": "integer",
            "default": 4,
            "description": "Number of processes for Eddy and motion filtering."
        },
        "allocation_cpu_max_dwi_fit_fodf": {
            "type": "integer",
            "default": 4,
            "description": "Number of processes for fODF fitting."
        },
        "allocation_cpu_max_fodf_fit_local": {
            "type": "integer",
            "default": 4,
            "description": "Number of processes for local tractography."
        },
        "allocation_cpu_max_t1_filter_noise": {
            "type": "integer",
            "default": 4,
            "description": "Number of processes for T1 denoising"
        },
        "allocation_cpu_max_t1_registration": {
            "type": "integer",
            "default": 4,
            "description": "Number of processes for registration task"
        }
    }
}
